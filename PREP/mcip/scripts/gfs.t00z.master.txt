netcdf gfs.t00z.masterf006 {
dimensions:
	grid_xt = 3072 ;
	grid_yt = 1536 ;
	pfull = 127 ;
	phalf = 128 ;
	time = UNLIMITED ; // (1 currently)
variables:
	double grid_xt(grid_xt) ;
		grid_xt:cartesian_axis = "X" ;
		grid_xt:long_name = "T-cell longitude" ;
		grid_xt:units = "degrees_E" ;
	double lon(grid_yt, grid_xt) ;
		lon:long_name = "T-cell longitude" ;
		lon:units = "degrees_E" ;
	double grid_yt(grid_yt) ;
		grid_yt:cartesian_axis = "Y" ;
		grid_yt:long_name = "T-cell latiitude" ;
		grid_yt:units = "degrees_N" ;
	double lat(grid_yt, grid_xt) ;
		lat:long_name = "T-cell latitude" ;
		lat:units = "degrees_N" ;
	float pfull(pfull) ;
		pfull:long_name = "ref full pressure level" ;
		pfull:units = "mb" ;
		pfull:cartesian_axis = "Z" ;
		pfull:positive = "down" ;
		pfull:edges = "phalf" ;
	float phalf(phalf) ;
		phalf:long_name = "ref half pressure level" ;
		phalf:units = "mb" ;
		phalf:cartesian_axis = "Z" ;
		phalf:positive = "down" ;
	double time(time) ;
		time:long_name = "time" ;
		time:units = "hours since 2018-01-10 00:00:00" ;
		time:cartesian_axis = "T" ;
		time:calendar_type = "JULIAN" ;
		time:calendar = "JULIAN" ;
	float cld_amt(time, pfull, grid_yt, grid_xt) ;
		cld_amt:long_name = "cloud amount" ;
		cld_amt:units = "1" ;
		cld_amt:missing_value = -1.e+10f ;
		cld_amt:_FillValue = -1.e+10f ;
		cld_amt:cell_methods = "time: point" ;
		cld_amt:output_file = "atm" ;
	float clwmr(time, pfull, grid_yt, grid_xt) ;
		clwmr:long_name = "cloud water mixing ratio" ;
		clwmr:units = "kg/kg" ;
		clwmr:missing_value = -1.e+10f ;
		clwmr:_FillValue = -1.e+10f ;
		clwmr:cell_methods = "time: point" ;
		clwmr:output_file = "atm" ;
	float delz(time, pfull, grid_yt, grid_xt) ;
		delz:long_name = "height thickness" ;
		delz:units = "m" ;
		delz:missing_value = -1.e+10f ;
		delz:_FillValue = -1.e+10f ;
		delz:cell_methods = "time: point" ;
		delz:output_file = "atm" ;
	float dpres(time, pfull, grid_yt, grid_xt) ;
		dpres:long_name = "pressure thickness" ;
		dpres:units = "pa" ;
		dpres:missing_value = -1.e+10f ;
		dpres:_FillValue = -1.e+10f ;
		dpres:cell_methods = "time: point" ;
		dpres:output_file = "atm" ;
	float dzdt(time, pfull, grid_yt, grid_xt) ;
		dzdt:long_name = "vertical wind" ;
		dzdt:units = "m/sec" ;
		dzdt:missing_value = -1.e+10f ;
		dzdt:_FillValue = -1.e+10f ;
		dzdt:cell_methods = "time: point" ;
		dzdt:output_file = "atm" ;
	float grle(time, pfull, grid_yt, grid_xt) ;
		grle:long_name = "graupel mixing ratio" ;
		grle:units = "kg/kg" ;
		grle:missing_value = -1.e+10f ;
		grle:_FillValue = -1.e+10f ;
		grle:cell_methods = "time: point" ;
		grle:output_file = "atm" ;
	float hgtsfc(time, grid_yt, grid_xt) ;
		hgtsfc:long_name = "surface geopotential height" ;
		hgtsfc:units = "gpm" ;
		hgtsfc:missing_value = -1.e+10f ;
		hgtsfc:_FillValue = -1.e+10f ;
		hgtsfc:cell_methods = "time: point" ;
		hgtsfc:output_file = "atm" ;
	float icmr(time, pfull, grid_yt, grid_xt) ;
		icmr:long_name = "cloud ice mixing ratio" ;
		icmr:units = "kg/kg" ;
		icmr:missing_value = -1.e+10f ;
		icmr:_FillValue = -1.e+10f ;
		icmr:cell_methods = "time: point" ;
		icmr:output_file = "atm" ;
	float o3mr(time, pfull, grid_yt, grid_xt) ;
		o3mr:long_name = "ozone mixing ratio" ;
		o3mr:units = "kg/kg" ;
		o3mr:missing_value = -1.e+10f ;
		o3mr:_FillValue = -1.e+10f ;
		o3mr:cell_methods = "time: point" ;
		o3mr:output_file = "atm" ;
	float rwmr(time, pfull, grid_yt, grid_xt) ;
		rwmr:long_name = "rain mixing ratio" ;
		rwmr:units = "kg/kg" ;
		rwmr:missing_value = -1.e+10f ;
		rwmr:_FillValue = -1.e+10f ;
		rwmr:cell_methods = "time: point" ;
		rwmr:output_file = "atm" ;
	float snmr(time, pfull, grid_yt, grid_xt) ;
		snmr:long_name = "snow mixing ratio" ;
		snmr:units = "kg/kg" ;
		snmr:missing_value = -1.e+10f ;
		snmr:_FillValue = -1.e+10f ;
		snmr:cell_methods = "time: point" ;
		snmr:output_file = "atm" ;
	float spfh(time, pfull, grid_yt, grid_xt) ;
		spfh:long_name = "specific humidity" ;
		spfh:units = "kg/kg" ;
		spfh:missing_value = -1.e+10f ;
		spfh:_FillValue = -1.e+10f ;
		spfh:cell_methods = "time: point" ;
		spfh:output_file = "atm" ;
	float tmp(time, pfull, grid_yt, grid_xt) ;
		tmp:long_name = "temperature" ;
		tmp:units = "K" ;
		tmp:missing_value = -1.e+10f ;
		tmp:_FillValue = -1.e+10f ;
		tmp:cell_methods = "time: point" ;
		tmp:output_file = "atm" ;
	float ugrd(time, pfull, grid_yt, grid_xt) ;
		ugrd:long_name = "zonal wind" ;
		ugrd:units = "m/sec" ;
		ugrd:missing_value = -1.e+10f ;
		ugrd:_FillValue = -1.e+10f ;
		ugrd:cell_methods = "time: point" ;
		ugrd:output_file = "atm" ;
	float vgrd(time, pfull, grid_yt, grid_xt) ;
		vgrd:long_name = "meridional wind" ;
		vgrd:units = "m/sec" ;
		vgrd:missing_value = -1.e+10f ;
		vgrd:_FillValue = -1.e+10f ;
		vgrd:cell_methods = "time: point" ;
		vgrd:output_file = "atm" ;
	float pressfc(time, grid_yt, grid_xt) ;
		pressfc:long_name = "surface pressure" ;
		pressfc:units = "Pa" ;
		pressfc:missing_value = 9.99000009817369e+20 ;
		pressfc:_FillValue = -1.e+10f ;
		pressfc:cell_methods = "time: point" ;
		pressfc:output_file = "sfc" ;
	float acond(time, grid_yt, grid_xt) ;
		acond:long_name = "Aerodynamic conductance" ;
		acond:units = "m/s" ;
		acond:missing_value = 9.99000009817369e+20 ;
		acond:cell_methods = "time: point" ;
		acond:output_file = "sfc" ;
	float albdo_ave(time, grid_yt, grid_xt) ;
		albdo_ave:long_name = "surface albedo" ;
		albdo_ave:units = "%" ;
		albdo_ave:missing_value = 9.99000009817369e+20 ;
		albdo_ave:cell_methods = "time: point" ;
		albdo_ave:output_file = "sfc" ;
	float alnsf(time, grid_yt, grid_xt) ;
		alnsf:long_name = "mean nir albedo with strong cosz dependency" ;
		alnsf:units = "%" ;
		alnsf:missing_value = 9.99000009817369e+20 ;
		alnsf:cell_methods = "time: point" ;
		alnsf:output_file = "sfc" ;
	float alnwf(time, grid_yt, grid_xt) ;
		alnwf:long_name = "mean nir albedo with weak cosz dependency" ;
		alnwf:units = "%" ;
		alnwf:missing_value = 9.99000009817369e+20 ;
		alnwf:cell_methods = "time: point" ;
		alnwf:output_file = "sfc" ;
	float alvsf(time, grid_yt, grid_xt) ;
		alvsf:long_name = "mean vis albedo with strong cosz dependency" ;
		alvsf:units = "%" ;
		alvsf:missing_value = 9.99000009817369e+20 ;
		alvsf:cell_methods = "time: point" ;
		alvsf:output_file = "sfc" ;
	float alvwf(time, grid_yt, grid_xt) ;
		alvwf:long_name = "mean vis albedo with weak cosz dependency" ;
		alvwf:units = "%" ;
		alvwf:missing_value = 9.99000009817369e+20 ;
		alvwf:cell_methods = "time: point" ;
		alvwf:output_file = "sfc" ;
	float c0(time, grid_yt, grid_xt) ;
		c0:long_name = "nsst coefficient1 to calculate d(tz)/d(ts)" ;
		c0:units = "numerical" ;
		c0:missing_value = 9.99000009817369e+20 ;
		c0:cell_methods = "time: point" ;
		c0:output_file = "sfc" ;
	float cd(time, grid_yt, grid_xt) ;
		cd:long_name = "nsst coefficient2 to calculate d(tz)/d(ts)" ;
		cd:units = "n/a" ;
		cd:missing_value = 9.99000009817369e+20 ;
		cd:cell_methods = "time: point" ;
		cd:output_file = "sfc" ;
	float cduvb_ave(time, grid_yt, grid_xt) ;
		cduvb_ave:long_name = "Clear sky UV-B Downward Solar Flux" ;
		cduvb_ave:units = "W/m**2" ;
		cduvb_ave:missing_value = 9.99000009817369e+20 ;
		cduvb_ave:cell_methods = "time: point" ;
		cduvb_ave:output_file = "sfc" ;
	float cnvprcp(time, grid_yt, grid_xt) ;
		cnvprcp:long_name = "convective rain at this time step" ;
		cnvprcp:units = "XXX" ;
		cnvprcp:missing_value = 9.99000009817369e+20 ;
		cnvprcp:cell_methods = "time: point" ;
		cnvprcp:output_file = "sfc" ;
	float cnwat(time, grid_yt, grid_xt) ;
		cnwat:long_name = "canopy water (cnwat in gfs data)" ;
		cnwat:units = "XXX" ;
		cnwat:missing_value = 9.99000009817369e+20 ;
		cnwat:cell_methods = "time: point" ;
		cnwat:output_file = "sfc" ;
	float cpofp(time, grid_yt, grid_xt) ;
		cpofp:long_name = "Percent frozen precipitation" ;
		cpofp:units = "%" ;
		cpofp:missing_value = 9.99000009817369e+20 ;
		cpofp:cell_methods = "time: point" ;
		cpofp:output_file = "sfc" ;
	float cprat_ave(time, grid_yt, grid_xt) ;
		cprat_ave:long_name = "averaged surface convective precipitation rate" ;
		cprat_ave:units = "kg/m**2/s" ;
		cprat_ave:missing_value = 9.99000009817369e+20 ;
		cprat_ave:cell_methods = "time: point" ;
		cprat_ave:output_file = "sfc" ;
	float cpratb_ave(time, grid_yt, grid_xt) ;
		cpratb_ave:long_name = "averaged bucket surface convective precipitation rate" ;
		cpratb_ave:units = "kg/m**2/s" ;
		cpratb_ave:missing_value = 9.99000009817369e+20 ;
		cpratb_ave:cell_methods = "time: point" ;
		cpratb_ave:output_file = "sfc" ;
	float crain(time, grid_yt, grid_xt) ;
		crain:long_name = "instantaneous categorical rain" ;
		crain:units = "number" ;
		crain:missing_value = 9.99000009817369e+20 ;
		crain:cell_methods = "time: point" ;
		crain:output_file = "sfc" ;
	float csdlf(time, grid_yt, grid_xt) ;
		csdlf:long_name = "Clear Sky Downward Long Wave Flux" ;
		csdlf:units = "W/m**2" ;
		csdlf:missing_value = 9.99000009817369e+20 ;
		csdlf:cell_methods = "time: point" ;
		csdlf:output_file = "sfc" ;
	float csdsf(time, grid_yt, grid_xt) ;
		csdsf:long_name = "Clear Sky Downward Short Wave Flux" ;
		csdsf:units = "W/m**2" ;
		csdsf:missing_value = 9.99000009817369e+20 ;
		csdsf:cell_methods = "time: point" ;
		csdsf:output_file = "sfc" ;
	float csulf(time, grid_yt, grid_xt) ;
		csulf:long_name = "Clear Sky Upward Long Wave Flux" ;
		csulf:units = "W/m**2" ;
		csulf:missing_value = 9.99000009817369e+20 ;
		csulf:cell_methods = "time: point" ;
		csulf:output_file = "sfc" ;
	float csulftoa(time, grid_yt, grid_xt) ;
		csulftoa:long_name = "Clear Sky Upward Long Wave Flux at toa" ;
		csulftoa:units = "W/m**2" ;
		csulftoa:missing_value = 9.99000009817369e+20 ;
		csulftoa:cell_methods = "time: point" ;
		csulftoa:output_file = "sfc" ;
	float csusf(time, grid_yt, grid_xt) ;
		csusf:long_name = "Clear Sky Upward Short Wave Flux" ;
		csusf:units = "W/m**2" ;
		csusf:missing_value = 9.99000009817369e+20 ;
		csusf:cell_methods = "time: point" ;
		csusf:output_file = "sfc" ;
	float csusftoa(time, grid_yt, grid_xt) ;
		csusftoa:long_name = "Clear Sky Upward Short Wave Flux at toa" ;
		csusftoa:units = "W/m**2" ;
		csusftoa:missing_value = 9.99000009817369e+20 ;
		csusftoa:cell_methods = "time: point" ;
		csusftoa:output_file = "sfc" ;
	float cwork_aveclm(time, grid_yt, grid_xt) ;
		cwork_aveclm:long_name = "cloud work function (valid only with sas)" ;
		cwork_aveclm:units = "J/kg" ;
		cwork_aveclm:missing_value = 9.99000009817369e+20 ;
		cwork_aveclm:cell_methods = "time: point" ;
		cwork_aveclm:output_file = "sfc" ;
	float dconv(time, grid_yt, grid_xt) ;
		dconv:long_name = "nsst thickness of free convection layer" ;
		dconv:units = "m" ;
		dconv:missing_value = 9.99000009817369e+20 ;
		dconv:cell_methods = "time: point" ;
		dconv:output_file = "sfc" ;
	float dlwrf(time, grid_yt, grid_xt) ;
		dlwrf:long_name = "instantaneous surface downward longwave flux" ;
		dlwrf:units = "W/m**2" ;
		dlwrf:missing_value = 9.99000009817369e+20 ;
		dlwrf:cell_methods = "time: point" ;
		dlwrf:output_file = "sfc" ;
	float dlwrf_ave(time, grid_yt, grid_xt) ;
		dlwrf_ave:long_name = "surface downward longwave flux" ;
		dlwrf_ave:units = "W/m**2" ;
		dlwrf_ave:missing_value = 9.99000009817369e+20 ;
		dlwrf_ave:cell_methods = "time: point" ;
		dlwrf_ave:output_file = "sfc" ;
	float dswrf(time, grid_yt, grid_xt) ;
		dswrf:long_name = "instantaneous surface downward shortwave flux" ;
		dswrf:units = "W/m**2" ;
		dswrf:missing_value = 9.99000009817369e+20 ;
		dswrf:cell_methods = "time: point" ;
		dswrf:output_file = "sfc" ;
	float dswrf_ave(time, grid_yt, grid_xt) ;
		dswrf_ave:long_name = "averaged surface downward shortwave flux" ;
		dswrf_ave:units = "W/m**2" ;
		dswrf_ave:missing_value = 9.99000009817369e+20 ;
		dswrf_ave:cell_methods = "time: point" ;
		dswrf_ave:output_file = "sfc" ;
	float dswrf_avetoa(time, grid_yt, grid_xt) ;
		dswrf_avetoa:long_name = "top of atmos downward shortwave flux" ;
		dswrf_avetoa:units = "W/m**2" ;
		dswrf_avetoa:missing_value = 9.99000009817369e+20 ;
		dswrf_avetoa:cell_methods = "time: point" ;
		dswrf_avetoa:output_file = "sfc" ;
	float dtcool(time, grid_yt, grid_xt) ;
		dtcool:long_name = "nsst sub-layer cooling amount" ;
		dtcool:units = "k" ;
		dtcool:missing_value = 9.99000009817369e+20 ;
		dtcool:cell_methods = "time: point" ;
		dtcool:output_file = "sfc" ;
	float duvb_ave(time, grid_yt, grid_xt) ;
		duvb_ave:long_name = "UV-B Downward Solar Flux" ;
		duvb_ave:units = "W/m**2" ;
		duvb_ave:missing_value = 9.99000009817369e+20 ;
		duvb_ave:cell_methods = "time: point" ;
		duvb_ave:output_file = "sfc" ;
	float evbs_ave(time, grid_yt, grid_xt) ;
		evbs_ave:long_name = "Direct Evaporation from Bare Soil - GFS lsm" ;
		evbs_ave:units = "W/m**2" ;
		evbs_ave:missing_value = 9.99000009817369e+20 ;
		evbs_ave:cell_methods = "time: point" ;
		evbs_ave:output_file = "sfc" ;
	float evcw_ave(time, grid_yt, grid_xt) ;
		evcw_ave:long_name = "Canopy water evaporation - GFS lsm" ;
		evcw_ave:units = "W/m**2" ;
		evcw_ave:missing_value = 9.99000009817369e+20 ;
		evcw_ave:cell_methods = "time: point" ;
		evcw_ave:output_file = "sfc" ;
	float f10m(time, grid_yt, grid_xt) ;
		f10m:long_name = "10-meter wind speed divided by lowest model wind speed" ;
		f10m:units = "N/A" ;
		f10m:missing_value = 9.99000009817369e+20 ;
		f10m:cell_methods = "time: point" ;
		f10m:output_file = "sfc" ;
	float facsf(time, grid_yt, grid_xt) ;
		facsf:long_name = "fractional coverage with strong cosz dependency" ;
		facsf:units = "XXX" ;
		facsf:missing_value = 9.99000009817369e+20 ;
		facsf:cell_methods = "time: point" ;
		facsf:output_file = "sfc" ;
	float facwf(time, grid_yt, grid_xt) ;
		facwf:long_name = "fractional coverage with weak cosz dependency" ;
		facwf:units = "XXX" ;
		facwf:missing_value = 9.99000009817369e+20 ;
		facwf:cell_methods = "time: point" ;
		facwf:output_file = "sfc" ;
	float ffhh(time, grid_yt, grid_xt) ;
		ffhh:long_name = "fh parameter from PBL scheme" ;
		ffhh:units = "XXX" ;
		ffhh:missing_value = 9.99000009817369e+20 ;
		ffhh:cell_methods = "time: point" ;
		ffhh:output_file = "sfc" ;
	float ffmm(time, grid_yt, grid_xt) ;
		ffmm:long_name = "fm parameter from PBL scheme" ;
		ffmm:units = "XXX" ;
		ffmm:missing_value = 9.99000009817369e+20 ;
		ffmm:cell_methods = "time: point" ;
		ffmm:output_file = "sfc" ;
	float fldcp(time, grid_yt, grid_xt) ;
		fldcp:long_name = "Field Capacity (volumetric)" ;
		fldcp:units = "fraction" ;
		fldcp:missing_value = 9.99000009817369e+20 ;
		fldcp:cell_methods = "time: point" ;
		fldcp:output_file = "sfc" ;
	float fricv(time, grid_yt, grid_xt) ;
		fricv:long_name = "uustar surface frictional wind" ;
		fricv:units = "XXX" ;
		fricv:missing_value = 9.99000009817369e+20 ;
		fricv:cell_methods = "time: point" ;
		fricv:output_file = "sfc" ;
	float gflux(time, grid_yt, grid_xt) ;
		gflux:long_name = "instantaneous surface ground heat flux" ;
		gflux:units = "W/m**2" ;
		gflux:missing_value = 9.99000009817369e+20 ;
		gflux:cell_methods = "time: point" ;
		gflux:output_file = "sfc" ;
	float gflux_ave(time, grid_yt, grid_xt) ;
		gflux_ave:long_name = "surface ground heat flux" ;
		gflux_ave:units = "W/m**2" ;
		gflux_ave:missing_value = 9.99000009817369e+20 ;
		gflux_ave:cell_methods = "time: point" ;
		gflux_ave:output_file = "sfc" ;
	float hgt_hyblev1(time, grid_yt, grid_xt) ;
		hgt_hyblev1:long_name = "layer 1 height" ;
		hgt_hyblev1:units = "m" ;
		hgt_hyblev1:missing_value = 9.99000009817369e+20 ;
		hgt_hyblev1:cell_methods = "time: point" ;
		hgt_hyblev1:output_file = "sfc" ;
	float hpbl(time, grid_yt, grid_xt) ;
		hpbl:long_name = "surface planetary boundary layer height" ;
		hpbl:units = "m" ;
		hpbl:missing_value = 9.99000009817369e+20 ;
		hpbl:cell_methods = "time: point" ;
		hpbl:output_file = "sfc" ;
	float icec(time, grid_yt, grid_xt) ;
		icec:long_name = "surface ice concentration (ice=1; no ice=0)" ;
		icec:units = "fraction" ;
		icec:missing_value = 9.99000009817369e+20 ;
		icec:cell_methods = "time: point" ;
		icec:output_file = "sfc" ;
	float icetk(time, grid_yt, grid_xt) ;
		icetk:long_name = "sea ice thickness (icetk in gfs_data)" ;
		icetk:units = "XXX" ;
		icetk:missing_value = 9.99000009817369e+20 ;
		icetk:cell_methods = "time: point" ;
		icetk:output_file = "sfc" ;
	float land(time, grid_yt, grid_xt) ;
		land:long_name = "sea-land-ice mask (0-sea, 1-land, 2-ice)" ;
		land:units = "numerical" ;
		land:missing_value = 9.99000009817369e+20 ;
		land:cell_methods = "time: point" ;
		land:output_file = "sfc" ;
	float lhtfl(time, grid_yt, grid_xt) ;
		lhtfl:long_name = "instantaneous surface latent heat net flux" ;
		lhtfl:units = "W/m**2" ;
		lhtfl:missing_value = 9.99000009817369e+20 ;
		lhtfl:cell_methods = "time: point" ;
		lhtfl:output_file = "sfc" ;
	float lhtfl_ave(time, grid_yt, grid_xt) ;
		lhtfl_ave:long_name = "surface latent heat flux" ;
		lhtfl_ave:units = "w/m**2" ;
		lhtfl_ave:missing_value = 9.99000009817369e+20 ;
		lhtfl_ave:cell_methods = "time: point" ;
		lhtfl_ave:output_file = "sfc" ;
	float nbdsf_ave(time, grid_yt, grid_xt) ;
		nbdsf_ave:long_name = "Near IR Beam Downward Solar Flux" ;
		nbdsf_ave:units = "W/m**2" ;
		nbdsf_ave:missing_value = 9.99000009817369e+20 ;
		nbdsf_ave:cell_methods = "time: point" ;
		nbdsf_ave:output_file = "sfc" ;
	float nddsf_ave(time, grid_yt, grid_xt) ;
		nddsf_ave:long_name = "Near IR Diffuse Downward Solar Flux" ;
		nddsf_ave:units = "W/m**2" ;
		nddsf_ave:missing_value = 9.99000009817369e+20 ;
		nddsf_ave:cell_methods = "time: point" ;
		nddsf_ave:output_file = "sfc" ;
	float orog(time, grid_yt, grid_xt) ;
		orog:long_name = "surface geopotential height" ;
		orog:units = "gpm" ;
		orog:missing_value = 9.99000009817369e+20 ;
		orog:cell_methods = "time: point" ;
		orog:output_file = "sfc" ;
	float pevpr(time, grid_yt, grid_xt) ;
		pevpr:long_name = "instantaneous surface potential evaporation" ;
		pevpr:units = "W/M**2" ;
		pevpr:missing_value = 9.99000009817369e+20 ;
		pevpr:cell_methods = "time: point" ;
		pevpr:output_file = "sfc" ;
	float pevpr_ave(time, grid_yt, grid_xt) ;
		pevpr_ave:long_name = "averaged potential evaporation rate" ;
		pevpr_ave:units = "W/M**2" ;
		pevpr_ave:missing_value = 9.99000009817369e+20 ;
		pevpr_ave:cell_methods = "time: point" ;
		pevpr_ave:output_file = "sfc" ;
	float prate_ave(time, grid_yt, grid_xt) ;
		prate_ave:long_name = "surface precipitation rate" ;
		prate_ave:units = "kg/m**2/s" ;
		prate_ave:missing_value = 9.99000009817369e+20 ;
		prate_ave:cell_methods = "time: point" ;
		prate_ave:output_file = "sfc" ;
	float prateb_ave(time, grid_yt, grid_xt) ;
		prateb_ave:long_name = "bucket surface precipitation rate" ;
		prateb_ave:units = "kg/m**2/s" ;
		prateb_ave:missing_value = 9.99000009817369e+20 ;
		prateb_ave:cell_methods = "time: point" ;
		prateb_ave:output_file = "sfc" ;
	float pres_avehcb(time, grid_yt, grid_xt) ;
		pres_avehcb:long_name = "pressure high cloud bottom level" ;
		pres_avehcb:units = "%" ;
		pres_avehcb:missing_value = 9.99000009817369e+20 ;
		pres_avehcb:cell_methods = "time: point" ;
		pres_avehcb:output_file = "sfc" ;
	float pres_avehct(time, grid_yt, grid_xt) ;
		pres_avehct:long_name = "pressure high cloud top level" ;
		pres_avehct:units = "%" ;
		pres_avehct:missing_value = 9.99000009817369e+20 ;
		pres_avehct:cell_methods = "time: point" ;
		pres_avehct:output_file = "sfc" ;
	float pres_avelcb(time, grid_yt, grid_xt) ;
		pres_avelcb:long_name = "pressure low cloud bottom level" ;
		pres_avelcb:units = "%" ;
		pres_avelcb:missing_value = 9.99000009817369e+20 ;
		pres_avelcb:cell_methods = "time: point" ;
		pres_avelcb:output_file = "sfc" ;
	float pres_avelct(time, grid_yt, grid_xt) ;
		pres_avelct:long_name = "pressure low cloud top level" ;
		pres_avelct:units = "%" ;
		pres_avelct:missing_value = 9.99000009817369e+20 ;
		pres_avelct:cell_methods = "time: point" ;
		pres_avelct:output_file = "sfc" ;
	float pres_avemcb(time, grid_yt, grid_xt) ;
		pres_avemcb:long_name = "pressure middle cloud bottom level" ;
		pres_avemcb:units = "%" ;
		pres_avemcb:missing_value = 9.99000009817369e+20 ;
		pres_avemcb:cell_methods = "time: point" ;
		pres_avemcb:output_file = "sfc" ;
	float pres_avemct(time, grid_yt, grid_xt) ;
		pres_avemct:long_name = "pressure middle cloud top level" ;
		pres_avemct:units = "%" ;
		pres_avemct:missing_value = 9.99000009817369e+20 ;
		pres_avemct:cell_methods = "time: point" ;
		pres_avemct:output_file = "sfc" ;
	float prescnvclb(time, grid_yt, grid_xt) ;
		prescnvclb:long_name = "pressure at convective cloud bottom level" ;
		prescnvclb:units = "pa" ;
		prescnvclb:missing_value = 9.99000009817369e+20 ;
		prescnvclb:cell_methods = "time: point" ;
		prescnvclb:output_file = "sfc" ;
	float prescnvclt(time, grid_yt, grid_xt) ;
		prescnvclt:long_name = "pressure at convective cloud top level" ;
		prescnvclt:units = "pa" ;
		prescnvclt:missing_value = 9.99000009817369e+20 ;
		prescnvclt:cell_methods = "time: point" ;
		prescnvclt:output_file = "sfc" ;
	float pwatclm(time, grid_yt, grid_xt) ;
		pwatclm:long_name = "atmos column precipitable water" ;
		pwatclm:units = "kg/m**2" ;
		pwatclm:missing_value = 9.99000009817369e+20 ;
		pwatclm:cell_methods = "time: point" ;
		pwatclm:output_file = "sfc" ;
	float qrain(time, grid_yt, grid_xt) ;
		qrain:long_name = "nsst sensible heat flux due to rainfall" ;
		qrain:units = "w/m2" ;
		qrain:missing_value = 9.99000009817369e+20 ;
		qrain:cell_methods = "time: point" ;
		qrain:output_file = "sfc" ;
	float sbsno_ave(time, grid_yt, grid_xt) ;
		sbsno_ave:long_name = "Sublimation (evaporation from snow) - GFS lsm" ;
		sbsno_ave:units = "W/m**2" ;
		sbsno_ave:missing_value = 9.99000009817369e+20 ;
		sbsno_ave:cell_methods = "time: point" ;
		sbsno_ave:output_file = "sfc" ;
	float sfcr(time, grid_yt, grid_xt) ;
		sfcr:long_name = "surface roughness" ;
		sfcr:units = "m" ;
		sfcr:missing_value = 9.99000009817369e+20 ;
		sfcr:cell_methods = "time: point" ;
		sfcr:output_file = "sfc" ;
	float sfexc(time, grid_yt, grid_xt) ;
		sfexc:long_name = "Exchange Coefficient" ;
		sfexc:units = "kg/m2/s" ;
		sfexc:missing_value = 9.99000009817369e+20 ;
		sfexc:cell_methods = "time: point" ;
		sfexc:output_file = "sfc" ;
	float shdmax(time, grid_yt, grid_xt) ;
		shdmax:long_name = "maximum fractional coverage of green vegetation" ;
		shdmax:units = "XXX" ;
		shdmax:missing_value = 9.99000009817369e+20 ;
		shdmax:cell_methods = "time: point" ;
		shdmax:output_file = "sfc" ;
	float shdmin(time, grid_yt, grid_xt) ;
		shdmin:long_name = "minimum fractional coverage of green vegetation" ;
		shdmin:units = "XXX" ;
		shdmin:missing_value = 9.99000009817369e+20 ;
		shdmin:cell_methods = "time: point" ;
		shdmin:output_file = "sfc" ;
	float shtfl(time, grid_yt, grid_xt) ;
		shtfl:long_name = "instantaneous surface sensible heat net flux" ;
		shtfl:units = "W/m**2" ;
		shtfl:missing_value = 9.99000009817369e+20 ;
		shtfl:cell_methods = "time: point" ;
		shtfl:output_file = "sfc" ;
	float shtfl_ave(time, grid_yt, grid_xt) ;
		shtfl_ave:long_name = "surface sensible heat flux" ;
		shtfl_ave:units = "w/m**2" ;
		shtfl_ave:missing_value = 9.99000009817369e+20 ;
		shtfl_ave:cell_methods = "time: point" ;
		shtfl_ave:output_file = "sfc" ;
	float sltyp(time, grid_yt, grid_xt) ;
		sltyp:long_name = "surface slope type" ;
		sltyp:units = "XXX" ;
		sltyp:missing_value = 9.99000009817369e+20 ;
		sltyp:cell_methods = "time: point" ;
		sltyp:output_file = "sfc" ;
	float snoalb(time, grid_yt, grid_xt) ;
		snoalb:long_name = "maximum snow albedo in fraction" ;
		snoalb:units = "XXX" ;
		snoalb:missing_value = 9.99000009817369e+20 ;
		snoalb:cell_methods = "time: point" ;
		snoalb:output_file = "sfc" ;
	float snod(time, grid_yt, grid_xt) ;
		snod:long_name = "surface snow depth" ;
		snod:units = "m" ;
		snod:missing_value = 9.99000009817369e+20 ;
		snod:cell_methods = "time: point" ;
		snod:output_file = "sfc" ;
	float snohf(time, grid_yt, grid_xt) ;
		snohf:long_name = "Snow Phase Change Heat Flux - GFS lsm" ;
		snohf:units = "W/m**2" ;
		snohf:missing_value = 9.99000009817369e+20 ;
		snohf:cell_methods = "time: point" ;
		snohf:output_file = "sfc" ;
	float snowc_ave(time, grid_yt, grid_xt) ;
		snowc_ave:long_name = "snow cover - GFS lsm" ;
		snowc_ave:units = "%" ;
		snowc_ave:missing_value = 9.99000009817369e+20 ;
		snowc_ave:cell_methods = "time: point" ;
		snowc_ave:output_file = "sfc" ;
	float soill1(time, grid_yt, grid_xt) ;
		soill1:long_name = "liquid soil mositure at layer-1" ;
		soill1:units = "xxx" ;
		soill1:missing_value = 9.99000009817369e+20 ;
		soill1:cell_methods = "time: point" ;
		soill1:output_file = "sfc" ;
	float soill2(time, grid_yt, grid_xt) ;
		soill2:long_name = "liquid soil mositure at layer-2" ;
		soill2:units = "xxx" ;
		soill2:missing_value = 9.99000009817369e+20 ;
		soill2:cell_methods = "time: point" ;
		soill2:output_file = "sfc" ;
	float soill3(time, grid_yt, grid_xt) ;
		soill3:long_name = "liquid soil mositure at layer-3" ;
		soill3:units = "xxx" ;
		soill3:missing_value = 9.99000009817369e+20 ;
		soill3:cell_methods = "time: point" ;
		soill3:output_file = "sfc" ;
	float soill4(time, grid_yt, grid_xt) ;
		soill4:long_name = "liquid soil mositure at layer-4" ;
		soill4:units = "xxx" ;
		soill4:missing_value = 9.99000009817369e+20 ;
		soill4:cell_methods = "time: point" ;
		soill4:output_file = "sfc" ;
	float soilm(time, grid_yt, grid_xt) ;
		soilm:long_name = "total column soil moisture content" ;
		soilm:units = "kg/m**2" ;
		soilm:missing_value = 9.99000009817369e+20 ;
		soilm:cell_methods = "time: point" ;
		soilm:output_file = "sfc" ;
	float soilt1(time, grid_yt, grid_xt) ;
		soilt1:long_name = "soil temperature 0-10cm" ;
		soilt1:units = "K" ;
		soilt1:missing_value = 9.99000009817369e+20 ;
		soilt1:cell_methods = "time: point" ;
		soilt1:output_file = "sfc" ;
	float soilt2(time, grid_yt, grid_xt) ;
		soilt2:long_name = "soil temperature 10-40cm" ;
		soilt2:units = "K" ;
		soilt2:missing_value = 9.99000009817369e+20 ;
		soilt2:cell_methods = "time: point" ;
		soilt2:output_file = "sfc" ;
	float soilt3(time, grid_yt, grid_xt) ;
		soilt3:long_name = "soil temperature 40-100cm" ;
		soilt3:units = "K" ;
		soilt3:missing_value = 9.99000009817369e+20 ;
		soilt3:cell_methods = "time: point" ;
		soilt3:output_file = "sfc" ;
	float soilt4(time, grid_yt, grid_xt) ;
		soilt4:long_name = "soil temperature 100-200cm" ;
		soilt4:units = "K" ;
		soilt4:missing_value = 9.99000009817369e+20 ;
		soilt4:cell_methods = "time: point" ;
		soilt4:output_file = "sfc" ;
	float soilw1(time, grid_yt, grid_xt) ;
		soilw1:long_name = "volumetric soil moisture 0-10cm" ;
		soilw1:units = "fraction" ;
		soilw1:missing_value = 9.99000009817369e+20 ;
		soilw1:cell_methods = "time: point" ;
		soilw1:output_file = "sfc" ;
	float soilw2(time, grid_yt, grid_xt) ;
		soilw2:long_name = "volumetric soil moisture 10-40cm" ;
		soilw2:units = "fraction" ;
		soilw2:missing_value = 9.99000009817369e+20 ;
		soilw2:cell_methods = "time: point" ;
		soilw2:output_file = "sfc" ;
	float soilw3(time, grid_yt, grid_xt) ;
		soilw3:long_name = "volumetric soil moisture 40-100cm" ;
		soilw3:units = "fraction" ;
		soilw3:missing_value = 9.99000009817369e+20 ;
		soilw3:cell_methods = "time: point" ;
		soilw3:output_file = "sfc" ;
	float soilw4(time, grid_yt, grid_xt) ;
		soilw4:long_name = "volumetric soil moisture 100-200cm" ;
		soilw4:units = "fraction" ;
		soilw4:missing_value = 9.99000009817369e+20 ;
		soilw4:cell_methods = "time: point" ;
		soilw4:output_file = "sfc" ;
	float sotyp(time, grid_yt, grid_xt) ;
		sotyp:long_name = "soil type in integer 1-9" ;
		sotyp:units = "number" ;
		sotyp:missing_value = 9.99000009817369e+20 ;
		sotyp:cell_methods = "time: point" ;
		sotyp:output_file = "sfc" ;
	float spfh2m(time, grid_yt, grid_xt) ;
		spfh2m:long_name = "2m specific humidity" ;
		spfh2m:units = "kg/kg" ;
		spfh2m:missing_value = 9.99000009817369e+20 ;
		spfh2m:cell_methods = "time: point" ;
		spfh2m:output_file = "sfc" ;
	float spfh_hyblev1(time, grid_yt, grid_xt) ;
		spfh_hyblev1:long_name = "layer 1 specific humidity" ;
		spfh_hyblev1:units = "kg/kg" ;
		spfh_hyblev1:missing_value = 9.99000009817369e+20 ;
		spfh_hyblev1:cell_methods = "time: point" ;
		spfh_hyblev1:output_file = "sfc" ;
	float spfhmax_max2m(time, grid_yt, grid_xt) ;
		spfhmax_max2m:long_name = "maximum specific humidity" ;
		spfhmax_max2m:units = "kg/kg" ;
		spfhmax_max2m:missing_value = 9.99000009817369e+20 ;
		spfhmax_max2m:cell_methods = "time: point" ;
		spfhmax_max2m:output_file = "sfc" ;
	float spfhmin_min2m(time, grid_yt, grid_xt) ;
		spfhmin_min2m:long_name = "minimum specific humidity" ;
		spfhmin_min2m:units = "kg/kg" ;
		spfhmin_min2m:missing_value = 9.99000009817369e+20 ;
		spfhmin_min2m:cell_methods = "time: point" ;
		spfhmin_min2m:output_file = "sfc" ;
	float ssrun_acc(time, grid_yt, grid_xt) ;
		ssrun_acc:long_name = "surface storm water runoff - GFS lsm" ;
		ssrun_acc:units = "kg/m**2" ;
		ssrun_acc:missing_value = 9.99000009817369e+20 ;
		ssrun_acc:cell_methods = "time: point" ;
		ssrun_acc:output_file = "sfc" ;
	float sunsd_acc(time, grid_yt, grid_xt) ;
		sunsd_acc:long_name = "Sunshine Duration" ;
		sunsd_acc:units = "s" ;
		sunsd_acc:missing_value = 9.99000009817369e+20 ;
		sunsd_acc:cell_methods = "time: point" ;
		sunsd_acc:output_file = "sfc" ;
	float tcdc_avebndcl(time, grid_yt, grid_xt) ;
		tcdc_avebndcl:long_name = "boundary layer cloud layer total cloud cover" ;
		tcdc_avebndcl:units = "%" ;
		tcdc_avebndcl:missing_value = 9.99000009817369e+20 ;
		tcdc_avebndcl:cell_methods = "time: point" ;
		tcdc_avebndcl:output_file = "sfc" ;
	float tcdc_aveclm(time, grid_yt, grid_xt) ;
		tcdc_aveclm:long_name = "atmos column total cloud cover" ;
		tcdc_aveclm:units = "%" ;
		tcdc_aveclm:missing_value = 9.99000009817369e+20 ;
		tcdc_aveclm:cell_methods = "time: point" ;
		tcdc_aveclm:output_file = "sfc" ;
	float tcdc_avehcl(time, grid_yt, grid_xt) ;
		tcdc_avehcl:long_name = "high cloud level total cloud cover" ;
		tcdc_avehcl:units = "%" ;
		tcdc_avehcl:missing_value = 9.99000009817369e+20 ;
		tcdc_avehcl:cell_methods = "time: point" ;
		tcdc_avehcl:output_file = "sfc" ;
	float tcdc_avelcl(time, grid_yt, grid_xt) ;
		tcdc_avelcl:long_name = "low cloud level total cloud cover" ;
		tcdc_avelcl:units = "%" ;
		tcdc_avelcl:missing_value = 9.99000009817369e+20 ;
		tcdc_avelcl:cell_methods = "time: point" ;
		tcdc_avelcl:output_file = "sfc" ;
	float tcdc_avemcl(time, grid_yt, grid_xt) ;
		tcdc_avemcl:long_name = "mid cloud level total cloud cover" ;
		tcdc_avemcl:units = "%" ;
		tcdc_avemcl:missing_value = 9.99000009817369e+20 ;
		tcdc_avemcl:cell_methods = "time: point" ;
		tcdc_avemcl:output_file = "sfc" ;
	float tcdccnvcl(time, grid_yt, grid_xt) ;
		tcdccnvcl:long_name = "convective cloud layer total cloud cover" ;
		tcdccnvcl:units = "%" ;
		tcdccnvcl:missing_value = 9.99000009817369e+20 ;
		tcdccnvcl:cell_methods = "time: point" ;
		tcdccnvcl:output_file = "sfc" ;
	float tg3(time, grid_yt, grid_xt) ;
		tg3:long_name = "deep soil temperature" ;
		tg3:units = "K" ;
		tg3:missing_value = 9.99000009817369e+20 ;
		tg3:cell_methods = "time: point" ;
		tg3:output_file = "sfc" ;
	float tisfc(time, grid_yt, grid_xt) ;
		tisfc:long_name = "surface temperature over ice fraction" ;
		tisfc:units = "K" ;
		tisfc:missing_value = 9.99000009817369e+20 ;
		tisfc:cell_methods = "time: point" ;
		tisfc:output_file = "sfc" ;
	float tmax_max2m(time, grid_yt, grid_xt) ;
		tmax_max2m:long_name = "max temperature at 2m height" ;
		tmax_max2m:units = "K" ;
		tmax_max2m:missing_value = 9.99000009817369e+20 ;
		tmax_max2m:cell_methods = "time: point" ;
		tmax_max2m:output_file = "sfc" ;
	float tmin_min2m(time, grid_yt, grid_xt) ;
		tmin_min2m:long_name = "min temperature at 2m height" ;
		tmin_min2m:units = "K" ;
		tmin_min2m:missing_value = 9.99000009817369e+20 ;
		tmin_min2m:cell_methods = "time: point" ;
		tmin_min2m:output_file = "sfc" ;
	float tmp2m(time, grid_yt, grid_xt) ;
		tmp2m:long_name = "2m temperature" ;
		tmp2m:units = "K" ;
		tmp2m:missing_value = 9.99000009817369e+20 ;
		tmp2m:cell_methods = "time: point" ;
		tmp2m:output_file = "sfc" ;
	float tmp_avehct(time, grid_yt, grid_xt) ;
		tmp_avehct:long_name = "temperature high cloud top level" ;
		tmp_avehct:units = "K" ;
		tmp_avehct:missing_value = 9.99000009817369e+20 ;
		tmp_avehct:cell_methods = "time: point" ;
		tmp_avehct:output_file = "sfc" ;
	float tmp_avelct(time, grid_yt, grid_xt) ;
		tmp_avelct:long_name = "temperature low cloud top level" ;
		tmp_avelct:units = "K" ;
		tmp_avelct:missing_value = 9.99000009817369e+20 ;
		tmp_avelct:cell_methods = "time: point" ;
		tmp_avelct:output_file = "sfc" ;
	float tmp_avemct(time, grid_yt, grid_xt) ;
		tmp_avemct:long_name = "temperature middle cloud top level" ;
		tmp_avemct:units = "K" ;
		tmp_avemct:missing_value = 9.99000009817369e+20 ;
		tmp_avemct:cell_methods = "time: point" ;
		tmp_avemct:output_file = "sfc" ;
	float tmp_hyblev1(time, grid_yt, grid_xt) ;
		tmp_hyblev1:long_name = "layer 1 temperature" ;
		tmp_hyblev1:units = "K" ;
		tmp_hyblev1:missing_value = 9.99000009817369e+20 ;
		tmp_hyblev1:cell_methods = "time: point" ;
		tmp_hyblev1:output_file = "sfc" ;
	float tmpsfc(time, grid_yt, grid_xt) ;
		tmpsfc:long_name = "surface temperature" ;
		tmpsfc:units = "K" ;
		tmpsfc:missing_value = 9.99000009817369e+20 ;
		tmpsfc:cell_methods = "time: point" ;
		tmpsfc:output_file = "sfc" ;
	float tprcp(time, grid_yt, grid_xt) ;
		tprcp:long_name = "total precipitation" ;
		tprcp:units = "kg/m**2" ;
		tprcp:missing_value = 9.99000009817369e+20 ;
		tprcp:cell_methods = "time: point" ;
		tprcp:output_file = "sfc" ;
	float trans_ave(time, grid_yt, grid_xt) ;
		trans_ave:long_name = "transpiration - GFS lsm" ;
		trans_ave:units = "W/m**2" ;
		trans_ave:missing_value = 9.99000009817369e+20 ;
		trans_ave:cell_methods = "time: point" ;
		trans_ave:output_file = "sfc" ;
	float tref(time, grid_yt, grid_xt) ;
		tref:long_name = "nsst reference or foundation temperature" ;
		tref:units = "K" ;
		tref:missing_value = 9.99000009817369e+20 ;
		tref:cell_methods = "time: point" ;
		tref:output_file = "sfc" ;
	float u-gwd_ave(time, grid_yt, grid_xt) ;
		u-gwd_ave:long_name = "surface zonal gravity wave stress" ;
		u-gwd_ave:units = "N/m**2" ;
		u-gwd_ave:missing_value = 9.99000009817369e+20 ;
		u-gwd_ave:cell_methods = "time: point" ;
		u-gwd_ave:output_file = "sfc" ;
	float uflx_ave(time, grid_yt, grid_xt) ;
		uflx_ave:long_name = "surface zonal momentum flux" ;
		uflx_ave:units = "N/m**2" ;
		uflx_ave:missing_value = 9.99000009817369e+20 ;
		uflx_ave:cell_methods = "time: point" ;
		uflx_ave:output_file = "sfc" ;
	float ugrd10m(time, grid_yt, grid_xt) ;
		ugrd10m:long_name = "10 meter u wind" ;
		ugrd10m:units = "m/s" ;
		ugrd10m:missing_value = 9.99000009817369e+20 ;
		ugrd10m:cell_methods = "time: point" ;
		ugrd10m:output_file = "sfc" ;
	float ugrd_hyblev1(time, grid_yt, grid_xt) ;
		ugrd_hyblev1:long_name = "layer 1 zonal wind" ;
		ugrd_hyblev1:units = "m/s" ;
		ugrd_hyblev1:missing_value = 9.99000009817369e+20 ;
		ugrd_hyblev1:cell_methods = "time: point" ;
		ugrd_hyblev1:output_file = "sfc" ;
	float ulwrf(time, grid_yt, grid_xt) ;
		ulwrf:long_name = "instantaneous surface upward longwave flux" ;
		ulwrf:units = "W/m**2" ;
		ulwrf:missing_value = 9.99000009817369e+20 ;
		ulwrf:cell_methods = "time: point" ;
		ulwrf:output_file = "sfc" ;
	float ulwrf_ave(time, grid_yt, grid_xt) ;
		ulwrf_ave:long_name = "surface upward longwave flux" ;
		ulwrf_ave:units = "W/m**2" ;
		ulwrf_ave:missing_value = 9.99000009817369e+20 ;
		ulwrf_ave:cell_methods = "time: point" ;
		ulwrf_ave:output_file = "sfc" ;
	float ulwrf_avetoa(time, grid_yt, grid_xt) ;
		ulwrf_avetoa:long_name = "top of atmos upward longwave flux" ;
		ulwrf_avetoa:units = "W/m**2" ;
		ulwrf_avetoa:missing_value = 9.99000009817369e+20 ;
		ulwrf_avetoa:cell_methods = "time: point" ;
		ulwrf_avetoa:output_file = "sfc" ;
	float uswrf(time, grid_yt, grid_xt) ;
		uswrf:long_name = "instantaneous surface upward shortwave flux" ;
		uswrf:units = "W/m**2" ;
		uswrf:missing_value = 9.99000009817369e+20 ;
		uswrf:cell_methods = "time: point" ;
		uswrf:output_file = "sfc" ;
	float uswrf_ave(time, grid_yt, grid_xt) ;
		uswrf_ave:long_name = "averaged surface upward shortwave flux" ;
		uswrf_ave:units = "W/m**2" ;
		uswrf_ave:missing_value = 9.99000009817369e+20 ;
		uswrf_ave:cell_methods = "time: point" ;
		uswrf_ave:output_file = "sfc" ;
	float uswrf_avetoa(time, grid_yt, grid_xt) ;
		uswrf_avetoa:long_name = "top of atmos upward shortwave flux" ;
		uswrf_avetoa:units = "W/m**2" ;
		uswrf_avetoa:missing_value = 9.99000009817369e+20 ;
		uswrf_avetoa:cell_methods = "time: point" ;
		uswrf_avetoa:output_file = "sfc" ;
	float v-gwd_ave(time, grid_yt, grid_xt) ;
		v-gwd_ave:long_name = "surface meridional gravity wave stress" ;
		v-gwd_ave:units = "N/m**2" ;
		v-gwd_ave:missing_value = 9.99000009817369e+20 ;
		v-gwd_ave:cell_methods = "time: point" ;
		v-gwd_ave:output_file = "sfc" ;
	float vbdsf_ave(time, grid_yt, grid_xt) ;
		vbdsf_ave:long_name = "Visible Beam Downward Solar Flux" ;
		vbdsf_ave:units = "W/m**2" ;
		vbdsf_ave:missing_value = 9.99000009817369e+20 ;
		vbdsf_ave:cell_methods = "time: point" ;
		vbdsf_ave:output_file = "sfc" ;
	float vddsf_ave(time, grid_yt, grid_xt) ;
		vddsf_ave:long_name = "Visible Diffuse Downward Solar Flux" ;
		vddsf_ave:units = "W/m**2" ;
		vddsf_ave:missing_value = 9.99000009817369e+20 ;
		vddsf_ave:cell_methods = "time: point" ;
		vddsf_ave:output_file = "sfc" ;
	float veg(time, grid_yt, grid_xt) ;
		veg:long_name = "vegetation fraction" ;
		veg:units = "fraction" ;
		veg:missing_value = 9.99000009817369e+20 ;
		veg:cell_methods = "time: point" ;
		veg:output_file = "sfc" ;
	float vflx_ave(time, grid_yt, grid_xt) ;
		vflx_ave:long_name = "surface meridional momentum flux" ;
		vflx_ave:units = "N/m**2" ;
		vflx_ave:missing_value = 9.99000009817369e+20 ;
		vflx_ave:cell_methods = "time: point" ;
		vflx_ave:output_file = "sfc" ;
	float vgrd10m(time, grid_yt, grid_xt) ;
		vgrd10m:long_name = "10 meter v wind" ;
		vgrd10m:units = "m/s" ;
		vgrd10m:missing_value = 9.99000009817369e+20 ;
		vgrd10m:cell_methods = "time: point" ;
		vgrd10m:output_file = "sfc" ;
	float vgrd_hyblev1(time, grid_yt, grid_xt) ;
		vgrd_hyblev1:long_name = "layer 1 meridional wind" ;
		vgrd_hyblev1:units = "m/s" ;
		vgrd_hyblev1:missing_value = 9.99000009817369e+20 ;
		vgrd_hyblev1:cell_methods = "time: point" ;
		vgrd_hyblev1:output_file = "sfc" ;
	float vtype(time, grid_yt, grid_xt) ;
		vtype:long_name = "vegetation type in integer 1-13" ;
		vtype:units = "number" ;
		vtype:missing_value = 9.99000009817369e+20 ;
		vtype:cell_methods = "time: point" ;
		vtype:output_file = "sfc" ;
	float w0(time, grid_yt, grid_xt) ;
		w0:long_name = "nsst coefficient3 to calculate d(tz)/d(ts)" ;
		w0:units = "n/a" ;
		w0:missing_value = 9.99000009817369e+20 ;
		w0:cell_methods = "time: point" ;
		w0:output_file = "sfc" ;
	float watr_acc(time, grid_yt, grid_xt) ;
		watr_acc:long_name = "total water runoff" ;
		watr_acc:units = "kg/m**2" ;
		watr_acc:missing_value = 9.99000009817369e+20 ;
		watr_acc:cell_methods = "time: point" ;
		watr_acc:output_file = "sfc" ;
	float wd(time, grid_yt, grid_xt) ;
		wd:long_name = "nsst coefficient4 to calculate d(tz)/d(ts)" ;
		wd:units = "n/a" ;
		wd:missing_value = 9.99000009817369e+20 ;
		wd:cell_methods = "time: point" ;
		wd:output_file = "sfc" ;
	float weasd(time, grid_yt, grid_xt) ;
		weasd:long_name = "surface snow water equivalent" ;
		weasd:units = "kg/m**2" ;
		weasd:missing_value = 9.99000009817369e+20 ;
		weasd:cell_methods = "time: point" ;
		weasd:output_file = "sfc" ;
	float wilt(time, grid_yt, grid_xt) ;
		wilt:long_name = "wiltimg point (volumetric)" ;
		wilt:units = "Proportion" ;
		wilt:missing_value = 9.99000009817369e+20 ;
		wilt:cell_methods = "time: point" ;
		wilt:output_file = "sfc" ;
	float xs(time, grid_yt, grid_xt) ;
		xs:long_name = "nsst salinity content in diurnal thermocline layer" ;
		xs:units = "n/a" ;
		xs:missing_value = 9.99000009817369e+20 ;
		xs:cell_methods = "time: point" ;
		xs:output_file = "sfc" ;
	float xt(time, grid_yt, grid_xt) ;
		xt:long_name = "nsst heat content in diurnal thermocline layer" ;
		xt:units = "k*m" ;
		xt:missing_value = 9.99000009817369e+20 ;
		xt:cell_methods = "time: point" ;
		xt:output_file = "sfc" ;
	float xtts(time, grid_yt, grid_xt) ;
		xtts:long_name = "nsst d(xt)/d(ts)" ;
		xtts:units = "m" ;
		xtts:missing_value = 9.99000009817369e+20 ;
		xtts:cell_methods = "time: point" ;
		xtts:output_file = "sfc" ;
	float xu(time, grid_yt, grid_xt) ;
		xu:long_name = "nsst u-current content in diurnal thermocline layer" ;
		xu:units = "m2/s" ;
		xu:missing_value = 9.99000009817369e+20 ;
		xu:cell_methods = "time: point" ;
		xu:output_file = "sfc" ;
	float xv(time, grid_yt, grid_xt) ;
		xv:long_name = "nsst v-current content in diurnal thermocline layer" ;
		xv:units = "m2/s" ;
		xv:missing_value = 9.99000009817369e+20 ;
		xv:cell_methods = "time: point" ;
		xv:output_file = "sfc" ;
	float xz(time, grid_yt, grid_xt) ;
		xz:long_name = "nsst diurnal thermocline layer thickness" ;
		xz:units = "m" ;
		xz:missing_value = 9.99000009817369e+20 ;
		xz:cell_methods = "time: point" ;
		xz:output_file = "sfc" ;
	float xzts(time, grid_yt, grid_xt) ;
		xzts:long_name = "nsst d(xt)/d(ts)" ;
		xzts:units = "m/k" ;
		xzts:missing_value = 9.99000009817369e+20 ;
		xzts:cell_methods = "time: point" ;
		xzts:output_file = "sfc" ;
	float zc(time, grid_yt, grid_xt) ;
		zc:long_name = "nsst sub-layer cooling thickness" ;
		zc:units = "m" ;
		zc:missing_value = 9.99000009817369e+20 ;
		zc:cell_methods = "time: point" ;
		zc:output_file = "sfc" ;

// global attributes:
		:hydrostatic = "non-hydrostatic" ;
		:ncnsto = 9 ;
		:ak = 0.999f, 1.605f, 2.532f, 3.924f, 5.976f, 8.947f, 13.177f, 19.096f, 27.243f, 38.276f, 52.984f, 72.293f, 97.269f, 129.11f, 169.135f, 218.767f, 279.506f, 352.894f, 440.481f, 543.782f, 664.236f, 803.164f, 961.734f, 1140.931f, 1341.538f, 1564.119f, 1809.028f, 2076.415f, 2366.252f, 2678.372f, 3012.51f, 3368.363f, 3745.646f, 4144.164f, 4563.881f, 5004.995f, 5468.017f, 5953.848f, 6463.864f, 7000.f, 7563.494f, 8150.661f, 8756.529f, 9376.141f, 10004.55f, 10636.85f, 11268.16f, 11893.64f, 12508.52f, 13108.09f, 13687.73f, 14242.89f, 14769.15f, 15262.2f, 15717.86f, 16132.09f, 16501.02f, 16820.94f, 17088.32f, 17299.85f, 17453.08f, 17548.35f, 17586.77f, 17569.7f, 17498.7f, 17375.56f, 17202.3f, 16981.14f, 16714.5f, 16405.02f, 16055.49f, 15668.86f, 15248.25f, 14796.87f, 14318.04f, 13815.15f, 13291.63f, 12750.92f, 12196.47f, 11631.66f, 11059.83f, 10484.21f, 9907.927f, 9333.967f, 8765.155f, 8204.142f, 7653.387f, 7115.147f, 6591.468f, 6084.176f, 5594.876f, 5124.949f, 4675.554f, 4247.633f, 3841.918f, 3458.933f, 3099.01f, 2762.297f, 2448.768f, 2158.238f, 1890.375f, 1644.712f, 1420.661f, 1217.528f, 1034.524f, 870.778f, 725.348f, 597.235f, 485.392f, 388.734f, 306.149f, 236.502f, 178.651f, 131.447f, 93.74f, 64.392f, 42.274f, 26.274f, 15.302f, 8.287f, 4.19f, 1.994f, 0.81f, 0.232f, 0.029f, 0.f, 0.f, 0.f ;
		:bk = 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 0.f, 1.018e-05f, 8.141e-05f, 0.00027469f, 0.00065078f, 0.00127009f, 0.00219248f, 0.00347713f, 0.00518228f, 0.00736504f, 0.0100812f, 0.01338492f, 0.01732857f, 0.02196239f, 0.02733428f, 0.03348954f, 0.04047056f, 0.04831661f, 0.05706358f, 0.06674372f, 0.07738548f, 0.08900629f, 0.101594f, 0.1151262f, 0.1295762f, 0.1449129f, 0.1611008f, 0.1780999f, 0.195866f, 0.2143511f, 0.2335031f, 0.2532663f, 0.2735822f, 0.294389f, 0.3156229f, 0.337218f, 0.3591072f, 0.3812224f, 0.4034951f, 0.4258572f, 0.4482413f, 0.4705813f, 0.492813f, 0.5148743f, 0.5367062f, 0.5582525f, 0.5794605f, 0.6002815f, 0.6206707f, 0.6405875f, 0.6599957f, 0.6788633f, 0.6971631f, 0.714872f, 0.7319713f, 0.7484465f, 0.7642871f, 0.7794867f, 0.7940422f, 0.8079541f, 0.8212263f, 0.8338652f, 0.8458801f, 0.8572826f, 0.8680866f, 0.8783077f, 0.8879632f, 0.8970718f, 0.9056532f, 0.9137284f, 0.9213187f, 0.9284464f, 0.9351338f, 0.9414037f, 0.9472789f, 0.9527821f, 0.957936f, 0.962763f, 0.9672851f, 0.971524f, 0.9755009f, 0.9792364f, 0.9827508f, 0.9860625f, 0.9891851f, 0.9921299f, 0.9949077f, 0.9975282f, 1.f ;
		:source = "FV3GFS" ;
		:grid = "gaussian" ;
		:im = 3072 ;
		:jm = 1536 ;
		:fhzero = 6 ;
		:ncld = 5 ;
		:nsoil = 4 ;
		:imp_physics = 11 ;
		:dtp = 150.f ;
		:history = "Mon Nov 18 11:33:39 2019: ncks -A gfs.t00z.sfcf006.nc gfs.t00z.masterf006.nc" ;
		:history_of_appended_files = "Mon Nov 18 11:33:39 2019: Appended file gfs.t00z.sfcf006.nc had no \"history\" attribute\n",
			"" ;
		:NCO = "4.6.9" ;
}
